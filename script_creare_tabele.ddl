-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-12-13 21:47:21 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

create table ADRESE
(
    ADRESAID  NUMBER(4)    not null
        constraint ADRESE_PK
            primary key,
    STRADA    VARCHAR2(15) not null,
    ORAS      VARCHAR2(15) not null,
    STAT      VARCHAR2(15),
    TARA      VARCHAR2(15) not null,
    CODPOSTAL VARCHAR2(6)  not null
        constraint CD_UQ
            unique
        check (regexp_like(codpostal, '[0-9]{5,6}'))
)
/

create table ANGAJATI
(
    ANGAJATID     NUMBER(4)    not null
        constraint CLIENTI_PK
            primary key,
    NUME          VARCHAR2(15) not null
        check (regexp_like(Nume, '[A-Za-z]')),
    PRENUME       VARCHAR2(15) not null
        check (regexp_like(Prenume, '^[A-Za-z]')),
    POZITIE       VARCHAR2(15) not null
        constraint CHECK_POZITIE
            check (POZITIE IN ('Junior', 'Mediu', 'Senior', 'Expert')),
    DATAANGAJARII DATE         not null,
    EMAIL         VARCHAR2(30) not null
        constraint ANGAJATI_PK
            unique
        check (regexp_like(email, '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}'))
)
/

create table CLIENTI
(
    CLIENTID     NUMBER(4)    not null
        constraint CLIENTI_PKV1
            primary key,
    NUME         VARCHAR2(15) not null
        check (regexp_like(Nume, '[A-Za-z]')),
    PRENUME      VARCHAR2(15) not null
        check (regexp_like(Prenume, '^[A-Za-z]')),
    EMAIL        VARCHAR2(30) not null
        constraint CLIENTI_PKV2
            unique
        check (regexp_like(email, '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}')),
    NUMARTELEFON VARCHAR2(12) not null
        constraint NUMETELEFON
            unique
        check (REGEXP_LIKE("NUMARTELEFON", '[0-9]{10,11}')),
    ADRESAID     NUMBER(4)    not null
        constraint ADRESE_CLIENTI_FK
            references ADRESE
)
/

create unique index CLIENTI__IDX
    on CLIENTI (ADRESAID)
/

create table COMENZI
(
    COMANDAID   NUMBER(4)    not null
        constraint COMENZI_PK
            primary key,
    DATACOMANDA DATE         not null,
    STATUS      VARCHAR2(15) not null
        constraint CHECK_STATUS
            check (STATUS IN ('In procesare', 'In livrare', 'Finalizata', 'Preluata', 'In asteptare')),
    CLIENTID    NUMBER(4)    not null
        constraint CLIENTI_COMENZI_FK
            references CLIENTI,
    ANGAJATID   NUMBER(4)    not null
        constraint ANGAJATI_COMENZI_FK
            references ANGAJATI
)
/

create table DETALIICOMENZI
(
    CANTITATE NUMBER(4) not null
        check (cantitate BETWEEN 1 AND 100),
    COMANDAID NUMBER(4) not null
        constraint COMENZI_DETALIICOMENZI_FK
            references COMENZI,
    PRODUSID  NUMBER(4) not null
        constraint PRODUSE_DETALIICOMENZI_FK
            references PRODUSE,
    constraint DETALIICOMENZI_PK
        unique (COMANDAID, PRODUSID)
)
/

create table FURNIZORI
(
    FURNIZORID     NUMBER(4)    not null
        constraint FURNIZORI_PK
            primary key,
    NUMECOMPANIE   VARCHAR2(20) not null,
    CONTACTNUME    VARCHAR2(20) not null
        check (regexp_like(ContactNume, '[A-Za-z]')),
    CONTACTPRENUME VARCHAR2(20) not null
        check (regexp_like(ContactPrenume, '[A-Za-z]')),
    CONTACTTELEFON VARCHAR2(20) not null
        check (regexp_like(ContactTelefon, '[0-9]')),
    CONTACTEMAIL   VARCHAR2(25) not null
        constraint CONTACTEMAIL
            unique
        check (regexp_like(ContactEmail, '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}')),
    ADRESAID       NUMBER(4)    not null
        constraint ADRESE_FURNIZORI_FK
            references ADRESE
)
/

create unique index FURNIZORI__IDX
    on FURNIZORI (ADRESAID)
/

create table PRODUSE
(
    PRODUSID   NUMBER(4)    not null
        constraint PRODUSE_PK
            primary key,
    NUME       VARCHAR2(15) not null,
    PRET       NUMBER(5)    not null
        check (pret BETWEEN 0.01 AND 10000),
    STOC       NUMBER(8)    not null
        check (stoc > 0),
    FURNIZORID NUMBER(4)    not null
        constraint FURNIZORI_PRODUSE_FK
            references FURNIZORI
)
/

ALTER TABLE clienti
    ADD CONSTRAINT adrese_clienti_fk FOREIGN KEY ( adresaid )
        REFERENCES adrese ( adresaid )
    NOT DEFERRABLE;

ALTER TABLE furnizori
    ADD CONSTRAINT adrese_furnizori_fk FOREIGN KEY ( adresaid )
        REFERENCES adrese ( adresaid )
    NOT DEFERRABLE;

ALTER TABLE comenzi
    ADD CONSTRAINT angajati_comenzi_fk FOREIGN KEY ( angajatid )
        REFERENCES angajati ( angajatid )
    NOT DEFERRABLE;

ALTER TABLE comenzi
    ADD CONSTRAINT clienti_comenzi_fk FOREIGN KEY ( clientid )
        REFERENCES clienti ( clientid )
    NOT DEFERRABLE;

ALTER TABLE detaliicomenzi
    ADD CONSTRAINT comenzi_detaliicomenzi_fk FOREIGN KEY ( comandaid )
        REFERENCES comenzi ( comandaid )
    NOT DEFERRABLE;

ALTER TABLE produse
    ADD CONSTRAINT furnizori_produse_fk FOREIGN KEY ( furnizorid )
        REFERENCES furnizori ( furnizorid )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_dataAngajarii
    BEFORE INSERT OR UPDATE ON Angajati
    FOR EACH ROW
DECLARE
    DataAngajarii DATE;
BEGIN
	IF( SYSDATE - :new.DataAngajarii < 0 )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR(DataAngajarii, 'DD.MM.YYYY' ) || ('Data introdusa este din viitor !!'));
	END IF;
END;
/

CREATE OR REPLACE TRIGGER trg_dataComanda
    BEFORE INSERT OR UPDATE ON Comenzi
    FOR EACH ROW
DECLARE
    DataComanda DATE;
BEGIN
	IF( SYSDATE - :new.DataComanda < 0 )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR(DataComanda, 'DD.MM.YYYY' ) || ('Data introdusa este din viitor !!'));
	END IF;
END;
/

CREATE SEQUENCE adrese_adresaid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER adrese_adresaid_trg BEFORE
    INSERT ON adrese
    FOR EACH ROW
    WHEN ( new.adresaid IS NULL )
BEGIN
    :new.adresaid := adrese_adresaid_seq.nextval;
END;
/

CREATE SEQUENCE angajati_angajatid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER angajati_angajatid_trg BEFORE
    INSERT ON angajati
    FOR EACH ROW
    WHEN ( new.angajatid IS NULL )
BEGIN
    :new.angajatid := angajati_angajatid_seq.nextval;
END;
/

CREATE SEQUENCE clienti_clientid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER clienti_clientid_trg BEFORE
    INSERT ON clienti
    FOR EACH ROW
    WHEN ( new.clientid IS NULL )
BEGIN
    :new.clientid := clienti_clientid_seq.nextval;
END;
/

CREATE SEQUENCE comenzi_comandaid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER comenzi_comandaid_trg BEFORE
    INSERT ON comenzi
    FOR EACH ROW
    WHEN ( new.comandaid IS NULL )
BEGIN
    :new.comandaid := comenzi_comandaid_seq.nextval;
END;
/

CREATE SEQUENCE furnizori_furnizorid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER furnizori_furnizorid_trg BEFORE
    INSERT ON furnizori
    FOR EACH ROW
    WHEN ( new.furnizorid IS NULL )
BEGIN
    :new.furnizorid := furnizori_furnizorid_seq.nextval;
END;
/

CREATE SEQUENCE produse_produsid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER produse_produsid_trg BEFORE
    INSERT ON produse
    FOR EACH ROW
    WHEN ( new.produsid IS NULL )
BEGIN
    :new.produsid := produse_produsid_seq.nextval;
END;
/

-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                             7
-- CREATE INDEX                             2
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- REDACTION POLICY                         0
--
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
--
-- ERRORS                                   0
-- WARNINGS                                 0